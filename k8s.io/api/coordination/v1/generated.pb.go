//
//Copyright The Kubernetes Authors.
//
//Licensed under the Apache License, Version 2.0 (the "License");
//you may not use this file except in compliance with the License.
//You may obtain a copy of the License at
//
//http://www.apache.org/licenses/LICENSE-2.0
//
//Unless required by applicable law or agreed to in writing, software
//distributed under the License is distributed on an "AS IS" BASIS,
//WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//See the License for the specific language governing permissions and
//limitations under the License.

// This file was autogenerated by go-to-protobuf. Do not edit it manually!

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.19.4
// source: k8s.io/api/coordination/v1/generated.proto

package v1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	v1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	_ "k8s.io/apimachinery/pkg/runtime"
	_ "k8s.io/apimachinery/pkg/runtime/schema"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Lease defines a lease concept.
type Lease struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
	// +optional
	Metadata *v1.ObjectMeta `protobuf:"bytes,1,opt,name=metadata" json:"metadata,omitempty"`
	// Specification of the Lease.
	// More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status
	// +optional
	Spec *LeaseSpec `protobuf:"bytes,2,opt,name=spec" json:"spec,omitempty"`
}

func (x *Lease) Reset() {
	*x = Lease{}
	if protoimpl.UnsafeEnabled {
		mi := &file_k8s_io_api_coordination_v1_generated_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Lease) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Lease) ProtoMessage() {}

func (x *Lease) ProtoReflect() protoreflect.Message {
	mi := &file_k8s_io_api_coordination_v1_generated_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Lease.ProtoReflect.Descriptor instead.
func (*Lease) Descriptor() ([]byte, []int) {
	return file_k8s_io_api_coordination_v1_generated_proto_rawDescGZIP(), []int{0}
}

func (x *Lease) GetMetadata() *v1.ObjectMeta {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *Lease) GetSpec() *LeaseSpec {
	if x != nil {
		return x.Spec
	}
	return nil
}

// LeaseList is a list of Lease objects.
type LeaseList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Standard list metadata.
	// More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
	// +optional
	Metadata *v1.ListMeta `protobuf:"bytes,1,opt,name=metadata" json:"metadata,omitempty"`
	// Items is a list of schema objects.
	Items []*Lease `protobuf:"bytes,2,rep,name=items" json:"items,omitempty"`
}

func (x *LeaseList) Reset() {
	*x = LeaseList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_k8s_io_api_coordination_v1_generated_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LeaseList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LeaseList) ProtoMessage() {}

func (x *LeaseList) ProtoReflect() protoreflect.Message {
	mi := &file_k8s_io_api_coordination_v1_generated_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LeaseList.ProtoReflect.Descriptor instead.
func (*LeaseList) Descriptor() ([]byte, []int) {
	return file_k8s_io_api_coordination_v1_generated_proto_rawDescGZIP(), []int{1}
}

func (x *LeaseList) GetMetadata() *v1.ListMeta {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *LeaseList) GetItems() []*Lease {
	if x != nil {
		return x.Items
	}
	return nil
}

// LeaseSpec is a specification of a Lease.
type LeaseSpec struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// holderIdentity contains the identity of the holder of a current lease.
	// +optional
	HolderIdentity *string `protobuf:"bytes,1,opt,name=holderIdentity" json:"holderIdentity,omitempty"`
	// leaseDurationSeconds is a duration that candidates for a lease need
	// to wait to force acquire it. This is measure against time of last
	// observed RenewTime.
	// +optional
	LeaseDurationSeconds *int32 `protobuf:"varint,2,opt,name=leaseDurationSeconds" json:"leaseDurationSeconds,omitempty"`
	// acquireTime is a time when the current lease was acquired.
	// +optional
	AcquireTime *v1.MicroTime `protobuf:"bytes,3,opt,name=acquireTime" json:"acquireTime,omitempty"`
	// renewTime is a time when the current holder of a lease has last
	// updated the lease.
	// +optional
	RenewTime *v1.MicroTime `protobuf:"bytes,4,opt,name=renewTime" json:"renewTime,omitempty"`
	// leaseTransitions is the number of transitions of a lease between
	// holders.
	// +optional
	LeaseTransitions *int32 `protobuf:"varint,5,opt,name=leaseTransitions" json:"leaseTransitions,omitempty"`
}

func (x *LeaseSpec) Reset() {
	*x = LeaseSpec{}
	if protoimpl.UnsafeEnabled {
		mi := &file_k8s_io_api_coordination_v1_generated_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LeaseSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LeaseSpec) ProtoMessage() {}

func (x *LeaseSpec) ProtoReflect() protoreflect.Message {
	mi := &file_k8s_io_api_coordination_v1_generated_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LeaseSpec.ProtoReflect.Descriptor instead.
func (*LeaseSpec) Descriptor() ([]byte, []int) {
	return file_k8s_io_api_coordination_v1_generated_proto_rawDescGZIP(), []int{2}
}

func (x *LeaseSpec) GetHolderIdentity() string {
	if x != nil && x.HolderIdentity != nil {
		return *x.HolderIdentity
	}
	return ""
}

func (x *LeaseSpec) GetLeaseDurationSeconds() int32 {
	if x != nil && x.LeaseDurationSeconds != nil {
		return *x.LeaseDurationSeconds
	}
	return 0
}

func (x *LeaseSpec) GetAcquireTime() *v1.MicroTime {
	if x != nil {
		return x.AcquireTime
	}
	return nil
}

func (x *LeaseSpec) GetRenewTime() *v1.MicroTime {
	if x != nil {
		return x.RenewTime
	}
	return nil
}

func (x *LeaseSpec) GetLeaseTransitions() int32 {
	if x != nil && x.LeaseTransitions != nil {
		return *x.LeaseTransitions
	}
	return 0
}

var File_k8s_io_api_coordination_v1_generated_proto protoreflect.FileDescriptor

var file_k8s_io_api_coordination_v1_generated_proto_rawDesc = []byte{
	0x0a, 0x2a, 0x6b, 0x38, 0x73, 0x2e, 0x69, 0x6f, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x63, 0x6f, 0x6f,
	0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x76, 0x31, 0x2f, 0x67, 0x65, 0x6e,
	0x65, 0x72, 0x61, 0x74, 0x65, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x1a, 0x6b, 0x38,
	0x73, 0x2e, 0x69, 0x6f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x1a, 0x34, 0x6b, 0x38, 0x73, 0x2e, 0x69, 0x6f,
	0x2f, 0x61, 0x70, 0x69, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x72, 0x79, 0x2f, 0x70, 0x6b,
	0x67, 0x2f, 0x61, 0x70, 0x69, 0x73, 0x2f, 0x6d, 0x65, 0x74, 0x61, 0x2f, 0x76, 0x31, 0x2f, 0x67,
	0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2f,
	0x6b, 0x38, 0x73, 0x2e, 0x69, 0x6f, 0x2f, 0x61, 0x70, 0x69, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e,
	0x65, 0x72, 0x79, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x2f,
	0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x36, 0x6b, 0x38, 0x73, 0x2e, 0x69, 0x6f, 0x2f, 0x61, 0x70, 0x69, 0x6d, 0x61, 0x63, 0x68, 0x69,
	0x6e, 0x65, 0x72, 0x79, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65,
	0x2f, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x2f, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65,
	0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x90, 0x01, 0x0a, 0x05, 0x4c, 0x65, 0x61, 0x73,
	0x65, 0x12, 0x4c, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x6b, 0x38, 0x73, 0x2e, 0x69, 0x6f, 0x2e, 0x61, 0x70, 0x69,
	0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x72, 0x79, 0x2e, 0x70, 0x6b, 0x67, 0x2e, 0x61, 0x70,
	0x69, 0x73, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x4d, 0x65, 0x74, 0x61, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12,
	0x39, 0x0a, 0x04, 0x73, 0x70, 0x65, 0x63, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e,
	0x6b, 0x38, 0x73, 0x2e, 0x69, 0x6f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6f, 0x72, 0x64,
	0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x65, 0x61, 0x73, 0x65,
	0x53, 0x70, 0x65, 0x63, 0x52, 0x04, 0x73, 0x70, 0x65, 0x63, 0x22, 0x90, 0x01, 0x0a, 0x09, 0x4c,
	0x65, 0x61, 0x73, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x4a, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x6b, 0x38, 0x73,
	0x2e, 0x69, 0x6f, 0x2e, 0x61, 0x70, 0x69, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x72, 0x79,
	0x2e, 0x70, 0x6b, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x2e, 0x76,
	0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x65, 0x74, 0x61, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0x12, 0x37, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x6b, 0x38, 0x73, 0x2e, 0x69, 0x6f, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31,
	0x2e, 0x4c, 0x65, 0x61, 0x73, 0x65, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x22, 0xb5, 0x02,
	0x0a, 0x09, 0x4c, 0x65, 0x61, 0x73, 0x65, 0x53, 0x70, 0x65, 0x63, 0x12, 0x26, 0x0a, 0x0e, 0x68,
	0x6f, 0x6c, 0x64, 0x65, 0x72, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0e, 0x68, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x49, 0x64, 0x65, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x12, 0x32, 0x0a, 0x14, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x44, 0x75, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x14, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x53, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x12, 0x51, 0x0a, 0x0b, 0x61, 0x63, 0x71, 0x75, 0x69,
	0x72, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x6b,
	0x38, 0x73, 0x2e, 0x69, 0x6f, 0x2e, 0x61, 0x70, 0x69, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65,
	0x72, 0x79, 0x2e, 0x70, 0x6b, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x6d, 0x65, 0x74, 0x61,
	0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x69, 0x63, 0x72, 0x6f, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x0b, 0x61,
	0x63, 0x71, 0x75, 0x69, 0x72, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x4d, 0x0a, 0x09, 0x72, 0x65,
	0x6e, 0x65, 0x77, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2f, 0x2e,
	0x6b, 0x38, 0x73, 0x2e, 0x69, 0x6f, 0x2e, 0x61, 0x70, 0x69, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e,
	0x65, 0x72, 0x79, 0x2e, 0x70, 0x6b, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x6d, 0x65, 0x74,
	0x61, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x69, 0x63, 0x72, 0x6f, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x09,
	0x72, 0x65, 0x6e, 0x65, 0x77, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x2a, 0x0a, 0x10, 0x6c, 0x65, 0x61,
	0x73, 0x65, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x10, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x42, 0x1c, 0x5a, 0x1a, 0x6b, 0x38, 0x73, 0x2e, 0x69, 0x6f, 0x2f,
	0x61, 0x70, 0x69, 0x2f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x2f, 0x76, 0x31,
}

var (
	file_k8s_io_api_coordination_v1_generated_proto_rawDescOnce sync.Once
	file_k8s_io_api_coordination_v1_generated_proto_rawDescData = file_k8s_io_api_coordination_v1_generated_proto_rawDesc
)

func file_k8s_io_api_coordination_v1_generated_proto_rawDescGZIP() []byte {
	file_k8s_io_api_coordination_v1_generated_proto_rawDescOnce.Do(func() {
		file_k8s_io_api_coordination_v1_generated_proto_rawDescData = protoimpl.X.CompressGZIP(file_k8s_io_api_coordination_v1_generated_proto_rawDescData)
	})
	return file_k8s_io_api_coordination_v1_generated_proto_rawDescData
}

var file_k8s_io_api_coordination_v1_generated_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_k8s_io_api_coordination_v1_generated_proto_goTypes = []interface{}{
	(*Lease)(nil),         // 0: k8s.io.api.coordination.v1.Lease
	(*LeaseList)(nil),     // 1: k8s.io.api.coordination.v1.LeaseList
	(*LeaseSpec)(nil),     // 2: k8s.io.api.coordination.v1.LeaseSpec
	(*v1.ObjectMeta)(nil), // 3: k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta
	(*v1.ListMeta)(nil),   // 4: k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta
	(*v1.MicroTime)(nil),  // 5: k8s.io.apimachinery.pkg.apis.meta.v1.MicroTime
}
var file_k8s_io_api_coordination_v1_generated_proto_depIdxs = []int32{
	3, // 0: k8s.io.api.coordination.v1.Lease.metadata:type_name -> k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta
	2, // 1: k8s.io.api.coordination.v1.Lease.spec:type_name -> k8s.io.api.coordination.v1.LeaseSpec
	4, // 2: k8s.io.api.coordination.v1.LeaseList.metadata:type_name -> k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta
	0, // 3: k8s.io.api.coordination.v1.LeaseList.items:type_name -> k8s.io.api.coordination.v1.Lease
	5, // 4: k8s.io.api.coordination.v1.LeaseSpec.acquireTime:type_name -> k8s.io.apimachinery.pkg.apis.meta.v1.MicroTime
	5, // 5: k8s.io.api.coordination.v1.LeaseSpec.renewTime:type_name -> k8s.io.apimachinery.pkg.apis.meta.v1.MicroTime
	6, // [6:6] is the sub-list for method output_type
	6, // [6:6] is the sub-list for method input_type
	6, // [6:6] is the sub-list for extension type_name
	6, // [6:6] is the sub-list for extension extendee
	0, // [0:6] is the sub-list for field type_name
}

func init() { file_k8s_io_api_coordination_v1_generated_proto_init() }
func file_k8s_io_api_coordination_v1_generated_proto_init() {
	if File_k8s_io_api_coordination_v1_generated_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_k8s_io_api_coordination_v1_generated_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Lease); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_k8s_io_api_coordination_v1_generated_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LeaseList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_k8s_io_api_coordination_v1_generated_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LeaseSpec); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_k8s_io_api_coordination_v1_generated_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_k8s_io_api_coordination_v1_generated_proto_goTypes,
		DependencyIndexes: file_k8s_io_api_coordination_v1_generated_proto_depIdxs,
		MessageInfos:      file_k8s_io_api_coordination_v1_generated_proto_msgTypes,
	}.Build()
	File_k8s_io_api_coordination_v1_generated_proto = out.File
	file_k8s_io_api_coordination_v1_generated_proto_rawDesc = nil
	file_k8s_io_api_coordination_v1_generated_proto_goTypes = nil
	file_k8s_io_api_coordination_v1_generated_proto_depIdxs = nil
}
